apply plugin: 'com.android.application'


static gitCommand() {
    def versionMajor = 0
    def versionMinor = 0
    def versionPatch = 0
    try {
        def gitResult = "git describe --tags --long".execute().text.split("-")
        def regexResult = gitResult[0].findAll("(\\d+)")
        versionMajor = regexResult[0].toInteger()
        versionMinor = regexResult[1].toInteger()
        versionPatch = gitResult[1].toInteger()
    }
    catch (Exception ex) {
        print(ex.message)
    }
    return [versionMajor, versionMinor, versionPatch]
}

static VersionName() {
    def ver = gitCommand()
    return "${ver[0]}.${ver[1]}.${ver[2]}"
}

static VersionCode() {
    def ver = gitCommand()
    return 1000 * ver[0] + 100 * ver[1] + ver[2]
}

def getSigningPasswords() {
    def lines = file("${System.properties['user.home']}${File.separator}.android${File.separator}ReleasePasswords.txt").readLines()
    return lines
}

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 28
        versionCode VersionCode()
        versionName VersionName()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        manifestPlaceholders = [orientation: "portrait"]
    }
    signingConfigs {
        release {
            storeFile file("${System.properties['user.home']}${File.separator}.android${File.separator}crysqrlRelease.jks")
            storePassword getSigningPasswords()[0]
            keyAlias "crysqrl"
            keyPassword getSigningPasswords()[1]
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    outputFileName = "${applicationId}-${variant.versionName}.apk"
                }
            }
        }
    }
    flavorDimensions "version"
    productFlavors {
        mainVersion {
            dimension "version"
        }
        developmentVersion {
            dimension "version"
            manifestPlaceholders = [orientation: "unspecified"]
            versionNameSuffix "-dev"
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

dependencies {
    implementation 'com.github.abdularis:CircularImageView:v1.2'
    implementation "android.arch.persistence.room:runtime:1.1.1"
    annotationProcessor "android.arch.persistence.room:compiler:1.1.1"
    implementation 'com.github.esafirm.android-image-picker:imagepicker:1.13.1'
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'
    implementation "androidx.lifecycle:lifecycle-extensions:2.0.0"
    implementation "android.arch.persistence.room:rxjava2:1.0.0"
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation "androidx.fragment:fragment:1.1.0-alpha02"
    implementation 'androidx.preference:preference:1.1.0-alpha01'
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:2.0.0"
    implementation "android.arch.navigation:navigation-fragment:1.0.0-alpha07"
    implementation "android.arch.navigation:navigation-ui:1.0.0-alpha07"
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha2'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
}
